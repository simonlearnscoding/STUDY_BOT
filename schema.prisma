// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// THIS IS WHERE WE CAN SET UP THE ARCHITECTURE OF OUR DB
// https://prisma-client-py.readthedocs.io/en/stable/getting_started/quickstart/
generator db {
    interface = "asyncio"
    recursive_type_depth = 5
    provider = "prisma-client-py"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:12345678@192.53.122.228/discordjs"
}


model Post {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  title      String
  published  Boolean
  desc       String?
}


//
// model User {
//   id                    Int                     @id
//   name                  String
//   nick                  String
//   timezone              Int                     @default(1)
//   role                  role
//   levelRole             levelRole               @default(GLADIATOR)
//   // currentlyInGuild Guild @relation(references: [id], name: "currentlyInGuild")
//   // logsNow               logsNow []
//   // historicLogs          historicLogs[]
//   // historicQuickLogs     historicQuickLogs[]
//   // logsToday             logsToday[]
//   // UserActivityLogsToday UserActivityLogsToday[]
// }
//
// model Guild {
//   id                    String                  @id @unique
//   name                  String
//   // users                 User[]
//   GuildPreferences      GuildPreferences?
//   preferenceID          Int                     @unique
//   logsNow               logsNow[]
//   historicLogs          historicLogs[]
//   historicQuickLogs     historicQuickLogs[]
//   UserActivityLogsToday UserActivityLogsToday[]
// }
//
// model GuildPreferences {
//   id      Int    @id @unique @default(autoincrement())
//   guild   Guild? @relation(fields: [guildID], references: [id])
//   guildID String @unique
// }
//
// model Activity {
//   id                    Int                     @id @unique @default(autoincrement())
//   name                  String
//   rewards               ActivityRewards?
//   UserActivityLogsToday UserActivityLogsToday[]
//
//   logsNow           logsNow[]
//   historicLogs      historicLogs[]
//   historicQuickLogs historicQuickLogs[]
//   logsToday         logsToday[]
// }
//
// model ActivityRewards {
//   Activity        Activity @relation(references: [id], fields: [activityID])
//   activityID      Int      @unique
//   id              Int      @id @unique @default(autoincrement())
//   rewardMinute    Int
//   rewardMinuteCam Int
//   rewardMinuteLog Int
//   RewardStreak    Int
//   RewardRestart   Int
//   rewardMin       Int
//   rewardMax       Int
//   reward          Int
// }
//
// model logsNow {
//   id         Int          @id @default(autoincrement())
//   // user       User         @relation(fields: [userId], references: [id])
//   activity   Activity     @relation(fields: [activityId], references: [id])
//   guild      Guild        @relation(fields: [guildId], references: [id])
//   timestamp  DateTime     @default(now())
//   type       ActivityType
//   userId     Int
//   activityId Int
//   guildId    String
// }
//
// model historicLogs {
//   id         Int          @id @default(autoincrement())
//   // user       User         @relation(references: [id], fields: [userId])
//   activity   Activity     @relation(references: [id], fields: [activityId])
//   guild      Guild        @relation(references: [id], fields: [guildId])
//   date       DateTime
//   type       ActivityType
//   timeframe  Timeframe
//   userId     Int
//   activityId Int
//   guildId    String
// }
//
// model historicQuickLogs {
//   id         Int          @id @default(autoincrement())
//   // user       User         @relation(references: [id], fields: [userId])
//   activity   Activity     @relation(references: [id], fields: [activityId])
//   guild      Guild        @relation(references: [id], fields: [guildId])
//   date       DateTime
//   type       ActivityType
//   start      DateTime
//   end        DateTime
//   userId     Int
//   activityId Int
//   guildId    String
// }
//
// model logsToday {
//   id         Int       @id @default(autoincrement())
//   // user       User      @relation(references: [id], fields: [userId])
//   activity   Activity  @relation(references: [id], fields: [activityId])
//   date       DateTime
//   Type       String
//   Timeframe  Timeframe
//   minutes    Int       @default(0)
//   userId     Int
//   activityId Int
// }
//
// model UserActivityLogsToday {
//   id         Int          @id @default(autoincrement())
//   // user       User         @relation(references: [id], fields: [userId])
//   type       ActivityType
//   guild      Guild        @relation(references: [id], fields: [guildId])
//   activity   Activity     @relation(references: [id], fields: [activityId])
//   startedAt  DateTime
//   endedAt    DateTime
//   userId     Int
//   guildId    String
//   activityId Int
// }
//
// model LevelRole {
//   name     levelRole @id
//   minlevel Int
// }
//
// enum levelRole {
//   GLADIATOR
//   FREEDMAN
//   PLEBEIAN
//   PATRICIAN
//   SENATOR
//   CONSUL
//   EMPEROR
// }
//
// enum role {
//   ADMIN
//   MODERATOR
//   USER
// }
//
// enum ActivityType {
//   CAM
//   LOG
//   VC
// }
//
// enum Timeframe {
//   DAY
//   WEEK
//   MONTH
// }
