// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// THIS IS WHERE WE CAN SET UP THE ARCHITECTURE OF OUR DB
// https://prisma-client-py.readthedocs.io/en/stable/getting_started/quickstart/
generator db {
  interface            = "asyncio"
  recursive_type_depth = 5
  provider             = "prisma-client-py"
}

datasource db {
  provider = "mysql"
  url      = "mysql://simon:spqr-server@192.53.122.228/discordjs"
}

model User {
  id   BigInt     @id
  name String
  bot  Boolean
  nick String
}

model Activity {
  id      Int              @id @unique @default(autoincrement())
  name    String
  rewards ActivityRewards?
  // UserActivityLogsToday UserActivityLogsToday[]

  // logsNow           logsNow[]
  // historicLogs      historicLogs[]
  // historicQuickLogs historicQuickLogs[]
  // logsToday         logsToday[]
}

//
model ActivityRewards {
  Activity        Activity @relation(references: [id], fields: [activityID])
  activityID      Int      @unique
  id              Int      @id @unique @default(autoincrement())
  rewardMinute    Int
  rewardMinuteCam Int
  rewardMinuteLog Int
  RewardStreak    Int
  RewardRestart   Int
  rewardMin       Int
  rewardMax       Int
  reward          Int
}

model logsNow {
  id         BigInt          @id @default(autoincrement())
  // user       User         @relation(fields: [userId], references: [id])
  // activity   Activity     @relation(fields: [activityId], references: [id])
  // guild      Guild        @relation(fields: [guildId], references: [id])
  timestamp  DateTime     @default(now())
  type       ActivityType
  userId     Int
  activityId Int
  guildId    String
}

//
//
// model logsToday {
//   id         Int      @id @default(autoincrement())
//   // user       User      @relation(references: [id], fields: [userId])
//   activity   Activity @relation(references: [id], fields: [activityId])
//   date       DateTime
//   Type       String
//   minutes    Int      @default(0)
//   userId     Int
//   activityId Int
// }

//
// model UserActivityLogsToday {
//   id         Int          @id @default(autoincrement())
//   user       User         @relation(references: [id], fields: [userId])
//   type       ActivityType
//   // guild      Guild        @relation(references: [id], fields: [guildId])
//   activity   Activity     @relation(references: [id], fields: [activityId])
//   startedAt  DateTime
//   endedAt    DateTime
//   userId     Int
//   guildId    String
//   activityId Int
// }

model LevelRole {
  name     levelRole @id
  minlevel Int
}

//
enum levelRole {
  GLADIATOR
  FREEDMAN
  PLEBEIAN
  PATRICIAN
  SENATOR
  CONSUL
  EMPEROR
}

//
enum role {
  ADMIN
  MODERATOR
  USER
}

//
enum ActivityType {
  CAM
  LOG
  SS
  BOTH
  VC
}

// enum Timeframe {
//   DAY
//   WEEK
//   MONTH
// }
