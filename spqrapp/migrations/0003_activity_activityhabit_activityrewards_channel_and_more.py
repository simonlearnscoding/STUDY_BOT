# Generated by Django 4.1 on 2023-11-27 16:28

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("spqrapp", "0002_alter_activitylog_managers_alter_session_managers_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "creation_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivityHabit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("min_time", models.IntegerField()),
                ("suggested_weekly_times", models.IntegerField()),
                ("suggested_level", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="ActivityRewards",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("done_reward", models.IntegerField()),
                ("habit_win_reward", models.IntegerField()),
                ("streak_reward", models.IntegerField()),
                ("reward_treshold", models.IntegerField()),
                ("reward_per_minute", models.IntegerField()),
                ("reward_after_treshold", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("discord_id", models.CharField(max_length=100)),
                (
                    "activity",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="spqrapp.activity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pillar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=10)),
                ("description", models.TextField(blank=True, null=True)),
                ("color", models.CharField(default="#000000", max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "priority",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOW", "LOW"),
                            ("MEDIUM", "MEDIUM"),
                            ("HIGH", "HIGH"),
                            ("VERY_HIGH", "VERY HIGH"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("discord_id", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="SessionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_record_type",
                    models.CharField(
                        choices=[
                            ("CAM", "CAM"),
                            ("SS", "SS"),
                            ("BOTH", "BOTH"),
                            ("VOICE", "VOICE"),
                            ("NONE", "NONE"),
                            ("LOG", "LOG"),
                        ],
                        max_length=50,
                    ),
                ),
                ("total_record_seconds", models.IntegerField()),
                ("percentage_of_total", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="SessionPartial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("is_active", models.BooleanField()),
                ("total_record_seconds", models.IntegerField()),
                (
                    "activity_record_type",
                    models.CharField(
                        choices=[
                            ("CAM", "CAM"),
                            ("SS", "SS"),
                            ("BOTH", "BOTH"),
                            ("VOICE", "VOICE"),
                            ("NONE", "NONE"),
                            ("LOG", "LOG"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("completed", models.BooleanField(default=False)),
                ("add_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                (
                    "planned",
                    models.CharField(
                        choices=[
                            ("TODAY", "TODAY"),
                            ("THIS_WEEK", "THIS_WEEK"),
                            ("THIS_MONTH", "THIS_MONTH"),
                            ("NEXT_MONTH", "NEXT_MONTH"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOW", "LOW"),
                            ("MEDIUM", "MEDIUM"),
                            ("HIGH", "HIGH"),
                            ("VERY_HIGH", "VERY HIGH"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="spqrapp.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="spqrapp.tag"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="spqrapp.task"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserHabits",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("stopped_date", models.DateTimeField()),
                ("frequency", models.IntegerField()),
                ("completed", models.BooleanField()),
                (
                    "activity_habit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="spqrapp.activityhabit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPillar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("xp", models.IntegerField(default=0)),
                ("level", models.IntegerField(default=0)),
                (
                    "pillar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="spqrapp.pillar"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserServer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("joined_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "server",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="spqrapp.server"
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="activitylog",
            name="activity_type",
        ),
        migrations.RemoveField(
            model_name="activitylog",
            name="session",
        ),
        migrations.RemoveField(
            model_name="activitylog",
            name="user",
        ),
        migrations.RemoveField(
            model_name="activitylog",
            name="vc_type",
        ),
        migrations.DeleteModel(
            name="Switches",
        ),
        migrations.RemoveField(
            model_name="role",
            name="min_level",
        ),
        migrations.RemoveField(
            model_name="role",
            name="pillar",
        ),
        migrations.RemoveField(
            model_name="session",
            name="activity",
        ),
        migrations.RemoveField(
            model_name="session",
            name="duration",
        ),
        migrations.RemoveField(
            model_name="session",
            name="left_at",
        ),
        migrations.RemoveField(
            model_name="session",
            name="nick",
        ),
        migrations.RemoveField(
            model_name="session",
            name="status",
        ),
        migrations.RemoveField(
            model_name="user",
            name="filter",
        ),
        migrations.RemoveField(
            model_name="user",
            name="name",
        ),
        migrations.RemoveField(
            model_name="user",
            name="nick",
        ),
        migrations.AddField(
            model_name="role",
            name="color",
            field=models.CharField(default="#000000", max_length=10),
        ),
        migrations.AddField(
            model_name="role",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="role",
            name="level_to_reach_it",
            field=models.IntegerField(default=999),
        ),
        migrations.AddField(
            model_name="user",
            name="discord_id",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="display_name",
            field=models.CharField(max_length=30, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="role",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.role",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="timezone",
            field=models.IntegerField(blank=True, default=2, null=True),
        ),
        migrations.AlterField(
            model_name="role",
            name="name",
            field=models.CharField(max_length=30),
        ),
        migrations.AlterField(
            model_name="session",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.user"
            ),
        ),
        migrations.DeleteModel(
            name="ActivityLog",
        ),
        migrations.DeleteModel(
            name="ActivityType",
        ),
        migrations.DeleteModel(
            name="VCType",
        ),
        migrations.AddField(
            model_name="userserver",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.user"
            ),
        ),
        migrations.AddField(
            model_name="userpillar",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.user"
            ),
        ),
        migrations.AddField(
            model_name="userhabits",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.user"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.session",
            ),
        ),
        migrations.AddField(
            model_name="sessionpartial",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.session"
            ),
        ),
        migrations.AddField(
            model_name="sessiondata",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.session"
            ),
        ),
        migrations.AddField(
            model_name="server",
            name="admins",
            field=models.ManyToManyField(
                related_name="admin_servers", to="spqrapp.user"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.user"
            ),
        ),
        migrations.AddField(
            model_name="channel",
            name="server",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.server"
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="activity_habit",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.activityhabit",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="activity_rewards",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.activityrewards",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="pillar",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.pillar",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="server",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="spqrapp.server",
            ),
        ),
        migrations.AlterField(
            model_name="userlevel",
            name="pillar",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="spqrapp.pillar"
            ),
        ),
    ]
